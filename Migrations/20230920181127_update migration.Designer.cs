// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NZWalks.API.Data;

#nullable disable

namespace NZWalks.API.Migrations
{
    [DbContext(typeof(NZWalkDBContex))]
    [Migration("20230920181127_update migration")]
    partial class updatemigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NZWalks.API.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dda1daea-734c-4dd1-ac3c-1c9e4d168dac"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("e4549b08-11e3-4385-8163-0fccd6459bcc"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("0fbd1bc7-f3ab-4914-a92e-b0fff04a5c24"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("NZWalks.API.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Region");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c7c9a318-1ab0-42f3-bd28-52187f9b5be7"),
                            Code = "AKL",
                            Name = "Auckland",
                            RegionImageUrl = "ak-image.jpg"
                        },
                        new
                        {
                            Id = new Guid("e281df03-351d-470e-8304-1c7d2026fa50"),
                            Code = "NTL",
                            Name = "Northland",
                            RegionImageUrl = "ntl-image.jpg"
                        },
                        new
                        {
                            Id = new Guid("965ff222-0543-41a9-883f-c79ed940191a"),
                            Code = "BOP",
                            Name = "Bay of Planty",
                            RegionImageUrl = "bop-image.jpg"
                        },
                        new
                        {
                            Id = new Guid("d40fa755-7d03-45b4-a516-2b869b7ec4f9"),
                            Code = "WGN",
                            Name = "Welligton",
                            RegionImageUrl = "wgn-image.jpg"
                        },
                        new
                        {
                            Id = new Guid("024d447e-06bc-4ec2-a383-497288dc3ee3"),
                            Code = "NSL",
                            Name = "Nelson",
                            RegionImageUrl = "nsl-image.jpg"
                        },
                        new
                        {
                            Id = new Guid("5ebfec4a-a5c5-4264-b910-b21f82ab3ac9"),
                            Code = "STL",
                            Name = "Southland",
                            RegionImageUrl = "stl-image.jpg"
                        });
                });

            modelBuilder.Entity("NZWalks.API.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walk");
                });

            modelBuilder.Entity("NZWalks.API.Models.Domain.Walk", b =>
                {
                    b.HasOne("NZWalks.API.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NZWalks.API.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
